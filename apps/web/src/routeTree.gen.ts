/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root';
import { Route as JoinImport } from './routes/join';
import { Route as IndexcopyImport } from './routes/index copy';
import { Route as CreateImport } from './routes/create';
import { Route as IndexImport } from './routes/index';
import { Route as PublicLoginImport } from './routes/_public/login';
import { Route as AuthHomeImport } from './routes/_auth/home';

// Create/Update Routes

const JoinRoute = JoinImport.update({
  id: '/join',
  path: '/join',
  getParentRoute: () => rootRoute
} as any);

const IndexcopyRoute = IndexcopyImport.update({
  id: '/index copy',
  path: '/index copy',
  getParentRoute: () => rootRoute
} as any);

const CreateRoute = CreateImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => rootRoute
} as any);

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute
} as any);

const PublicLoginRoute = PublicLoginImport.update({
  id: '/_public/login',
  path: '/login',
  getParentRoute: () => rootRoute
} as any);

const AuthHomeRoute = AuthHomeImport.update({
  id: '/_auth/home',
  path: '/home',
  getParentRoute: () => rootRoute
} as any);

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    '/create': {
      id: '/create';
      path: '/create';
      fullPath: '/create';
      preLoaderRoute: typeof CreateImport;
      parentRoute: typeof rootRoute;
    };
    '/index copy': {
      id: '/index copy';
      path: '/index copy';
      fullPath: '/index copy';
      preLoaderRoute: typeof IndexcopyImport;
      parentRoute: typeof rootRoute;
    };
    '/join': {
      id: '/join';
      path: '/join';
      fullPath: '/join';
      preLoaderRoute: typeof JoinImport;
      parentRoute: typeof rootRoute;
    };
    '/_auth/home': {
      id: '/_auth/home';
      path: '/home';
      fullPath: '/home';
      preLoaderRoute: typeof AuthHomeImport;
      parentRoute: typeof rootRoute;
    };
    '/_public/login': {
      id: '/_public/login';
      path: '/login';
      fullPath: '/login';
      preLoaderRoute: typeof PublicLoginImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute;
  '/create': typeof CreateRoute;
  '/index copy': typeof IndexcopyRoute;
  '/join': typeof JoinRoute;
  '/home': typeof AuthHomeRoute;
  '/login': typeof PublicLoginRoute;
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute;
  '/create': typeof CreateRoute;
  '/index copy': typeof IndexcopyRoute;
  '/join': typeof JoinRoute;
  '/home': typeof AuthHomeRoute;
  '/login': typeof PublicLoginRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  '/': typeof IndexRoute;
  '/create': typeof CreateRoute;
  '/index copy': typeof IndexcopyRoute;
  '/join': typeof JoinRoute;
  '/_auth/home': typeof AuthHomeRoute;
  '/_public/login': typeof PublicLoginRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: '/' | '/create' | '/index copy' | '/join' | '/home' | '/login';
  fileRoutesByTo: FileRoutesByTo;
  to: '/' | '/create' | '/index copy' | '/join' | '/home' | '/login';
  id:
    | '__root__'
    | '/'
    | '/create'
    | '/index copy'
    | '/join'
    | '/_auth/home'
    | '/_public/login';
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  CreateRoute: typeof CreateRoute;
  IndexcopyRoute: typeof IndexcopyRoute;
  JoinRoute: typeof JoinRoute;
  AuthHomeRoute: typeof AuthHomeRoute;
  PublicLoginRoute: typeof PublicLoginRoute;
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CreateRoute: CreateRoute,
  IndexcopyRoute: IndexcopyRoute,
  JoinRoute: JoinRoute,
  AuthHomeRoute: AuthHomeRoute,
  PublicLoginRoute: PublicLoginRoute
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/create",
        "/index copy",
        "/join",
        "/_auth/home",
        "/_public/login"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/create": {
      "filePath": "create.tsx"
    },
    "/index copy": {
      "filePath": "index copy.tsx"
    },
    "/join": {
      "filePath": "join.tsx"
    },
    "/_auth/home": {
      "filePath": "_auth/home.tsx"
    },
    "/_public/login": {
      "filePath": "_public/login.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
